name: Deploy to Turhost Production

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment (bypass checks)'
        required: false
        default: 'false'

env:
  THEME_NAME: welmacart-v2
  REMOTE_PATH: /public_html/wp-content/themes/welmacart-v2

jobs:
  validate:
    name: Validate Theme Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate PHP syntax
      run: |
        echo "üîç Validating PHP syntax..."
        find . -name "*.php" -not -path "./.git/*" -not -path "./node_modules/*" -not -name "*-backup.php" -not -name "*-safe.php" -not -name "*.disabled" | while read file; do
          php -l "$file"
          if [ $? -ne 0 ]; then
            echo "‚ùå PHP syntax error in $file"
            exit 1
          fi
        done
        echo "‚úÖ All PHP files have valid syntax"
        
    - name: Check required theme files
      run: |
        echo "üîç Checking required WordPress theme files..."
        required_files=("style.css" "index.php" "functions.php")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "‚ùå Required file missing: $file"
            exit 1
          fi
        done
        echo "‚úÖ All required theme files present"
        
    - name: Validate style.css header
      run: |
        echo "üîç Validating style.css header..."
        if ! grep -q "Theme Name:" style.css; then
          echo "‚ùå style.css missing Theme Name header"
          exit 1
        fi
        echo "‚úÖ style.css header is valid"

  deploy:
    name: Deploy to Turhost
    runs-on: ubuntu-latest
    needs: validate
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Prepare deployment files
      run: |
        echo "üì¶ Preparing files for deployment..."
        
        # Create deployment directory
        mkdir -p deployment
        
        # Copy all files except excluded ones
        rsync -av --progress . deployment/ \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='.vscode' \
          --exclude='node_modules' \
          --exclude='*.log' \
          --exclude='*.tmp' \
          --exclude='*.temp' \
          --exclude='.DS_Store' \
          --exclude='Thumbs.db' \
          --exclude='*.disabled' \
          --exclude='*-backup.php' \
          --exclude='*-safe.php' \
          --exclude='template-debug.php' \
          --exclude='inc/debug.php' \
          --exclude='debug.log' \
          --exclude='error_log' \
          --exclude='*.bak' \
          --exclude='*.backup' \
          --exclude='.sass-cache' \
          --exclude='*.css.map' \
          --exclude='.env*' \
          --exclude='local-xdebuginfo.php' \
          --exclude='assets/images/temp' \
          --exclude='assets/images/test' \
          --exclude='assets/images/uploads' \
          --exclude='deployment'
          
        echo "üìÇ Files prepared for deployment:"
        find deployment -type f | head -20
        total_files=$(find deployment -type f | wc -l)
        echo "üìä Total files to deploy: $total_files"
        
    - name: Create deployment manifest
      run: |
        echo "üìã Creating deployment manifest..."
        echo "Deployment Date: $(date)" > deployment/DEPLOYMENT_INFO.txt
        echo "Git Commit: ${{ github.sha }}" >> deployment/DEPLOYMENT_INFO.txt
        echo "Branch: ${{ github.ref_name }}" >> deployment/DEPLOYMENT_INFO.txt
        echo "Triggered by: ${{ github.actor }}" >> deployment/DEPLOYMENT_INFO.txt
        echo "Workflow: ${{ github.workflow }}" >> deployment/DEPLOYMENT_INFO.txt
        
    - name: Deploy via SFTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.TURHOST_HOST }}
        username: ${{ secrets.TURHOST_USERNAME }}
        password: ${{ secrets.TURHOST_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./deployment/
        server-dir: ${{ env.REMOTE_PATH }}/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.vscode/**
          **/.github/**
          **/*.log
          **/*.tmp
          **/*.temp
          **/.DS_Store
          **/Thumbs.db
          **/*.disabled
          **/*-backup.php
          **/*-safe.php
          **/template-debug.php
          **/inc/debug.php
          **/debug.log
          **/error_log
          **/*.bak
          **/*.backup
          **/.sass-cache/**
          **/*.css.map
          **/.env*
          **/local-xdebuginfo.php
          **/assets/images/temp/**
          **/assets/images/test/**
          **/assets/images/uploads/**
        
    - name: Verify deployment
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.TURHOST_HOST }}
        username: ${{ secrets.TURHOST_USERNAME }}
        password: ${{ secrets.TURHOST_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./deployment/
        server-dir: ${{ env.REMOTE_PATH }}/
        dry-run: true
        
    - name: Post-deployment check
      run: |
        echo "‚úÖ Deployment completed successfully!"
        echo "üåê Theme should be available at: https://welma.tr"
        echo "üìÅ Deployed to: ${{ env.REMOTE_PATH }}"
        echo "üîó Git commit: ${{ github.sha }}"
        
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [validate, deploy]
    if: always()
    
    steps:
    - name: Deployment Success Notification
      if: needs.deploy.result == 'success'
      run: |
        echo "üéâ Deployment successful!"
        echo "Theme: ${{ env.THEME_NAME }}"
        echo "Commit: ${{ github.sha }}"
        echo "URL: https://welma.tr"
        
    - name: Deployment Failure Notification
      if: needs.deploy.result == 'failure' || needs.validate.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs above for details"
        echo "Commit: ${{ github.sha }}"
        exit 1
